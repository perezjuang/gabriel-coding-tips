AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    LambdaName:
        Type: String
    LambdaRuntime:
       Type: String
    LambdaBucket:
        Type: String
    ZipName:
        Type: String  
Resources:
    LambdaFunction:
      Type: AWS::Lambda::Function
      Properties:
        Code:
            S3Bucket: !Ref LambdaBucket
            S3Key: !Ref ZipName
        FunctionName: !Ref LambdaName
        Handler: lambda_function.lambda_handler
        Runtime: !Ref LambdaRuntime
        MemorySize: 512
        Timeout: 600
        Role: !GetAtt LambdaRole.Arn
        Environment:
            Variables:
                DYNAMO_PLATZI: !ImportValue DynamoPlatzi

    LambdaPolicyEC2:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    -
                      Effect: Allow
                      Action:
                          - ec2:DisassociateAddress
                          - ec2:CreateDhcpOptions
                          - ec2:ReplaceRouteTableAssociation
                          - ec2:RunScheduledInstances
                          - ec2:RequestSpotFleet
                          - ec2:DisableVgwRoutePropagation
                          - ec2:AssociateVpcCidrBlock
                          - ec2:ReleaseHosts
                          - ec2:ReplaceRoute
                          - ec2:DisassociateVpcCidrBlock
                          - ec2:DeleteNetworkInterfacePermission
                          - ec2:DescribeNetworkInterfaces
                          - ec2:StartInstances
                          - ec2:DescribeNetworkInterfaceAttribute
                          - ec2:CreateRoute
                          - ec2:ReplaceNetworkAclEntry
                          - ec2:CreateSecurityGroup
                          - ec2:CreateNetworkAcl
                          - ec2:DescribeNetworkInterfacePermissions
                          - ec2:TerminateInstances
                          - ec2:AcceptVpcEndpointConnections
                          - ec2:DeleteNetworkInterface
                          - ec2:CreateRouteTable
                          - ec2:RunInstances
                          - ec2:StopInstances
                          - ec2:DisassociateRouteTable
                          - ec2:DisassociateSubnetCidrBlock
                          - ec2:ModifyHosts
                          - ec2:ReplaceNetworkAclAssociation
                          - ec2:CreateVolume
                          - ec2:CreateNetworkInterface
                          - ec2:DetachVpnGateway
                          - ec2:CreateDefaultVpc
                          - ec2:DisassociateIamInstanceProfile
                          - ec2:CreateVpcEndpoint
                          - ec2:DisableVpcClassicLink
                          - ec2:CreateSubnet
                      Resource:
                          - "*"
    LambdaPolicyDynamo:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    -
                      Effect: Allow
                      Action:
                          - dynamodb:PutItem
                          - dynamodb:UpdateItem
                          - dynamodb:GetItem
                          - dynamodb:*
                      Resource:
                          - "*"

    LambdaPolicyCW:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    -
                      Effect: Allow
                      Action:
                          - logs:*
                          - cloudwatch:*
                          - xray:*
                      Resource:
                          - "*"

    LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        ManagedPolicyArns:
          - !Ref LambdaPolicyDynamo
          - !Ref LambdaPolicyEC2
          - !Ref LambdaPolicyCW
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
    LambdaPolicyS3:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    -
                      Effect: Allow
                      Action:
                          - s3:ListAllMyBuckets
                          - s3:HeadBucket
                          - s3:ListObjects
                      Resource:
                          - "*"
                    -
                      Effect: Allow
                      Action:
                          - s3:*
                      Resource:
                          - "*"                          
Outputs:
  LambdaPolicyDynamo:
    Value: !Ref LambdaPolicyDynamo
    Export:
        Name: LambdaPolicyDynamo
  LambdaPolicyEC2:
    Value: !Ref LambdaPolicyEC2
    Export:
        Name: LambdaPolicyEC2
  LambdaPolicyCW:
    Value: !Ref LambdaPolicyCW
    Export:
        Name: LambdaPolicyCW
  LambdaFunction:
    Value: !GetAtt LambdaFunction.Arn
    Export:
        Name: LambdaFunction       
        
                       